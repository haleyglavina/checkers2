{"ast":null,"code":"var _jsxFileName = \"/Users/haleyglavina/Desktop/code/checkers2/src/components/NavBar/NavBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport ThemeContext from '../../utils/ThemeContext';\nimport Toggle from '../Toggle/Toggle';\nimport { Nav } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NavBar({\n  sameScreen,\n  setSameScreen\n}) {\n  _s();\n\n  const {\n    theme,\n    setTheme\n  } = useContext(ThemeContext); // for switching light/dark theme\n\n  const switchTheme = () => {\n    setTheme(theme == 'light' ? 'dark' : 'light');\n  }; // for switching screens together/separate mode\n\n\n  const switchScreenMode = () => {\n    setSameScreen(!sameScreen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Nav, {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"title\",\n      children: \"Battle of da Browsers \\uD83D\\uDD25\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n      toggleAction: switchTheme,\n      initialState: theme === 'dark'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n      toggleAction: switchScreenMode,\n      initialState: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NavBar, \"CrVyfxkbaVKs8B1q77aq0EAdMEo=\");\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/haleyglavina/Desktop/code/checkers2/src/components/NavBar/NavBar.js"],"names":["React","useContext","useState","ThemeContext","Toggle","Nav","NavBar","sameScreen","setSameScreen","theme","setTheme","switchTheme","switchScreenMode"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,GAAT,QAAoB,UAApB;;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAhB,EAA+C;AAAA;;AAE7C,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBT,UAAU,CAACE,YAAD,CAAtC,CAF6C,CAI7C;;AACA,QAAMQ,WAAW,GAAG,MAAM;AACxBD,IAAAA,QAAQ,CAAGD,KAAK,IAAI,OAAV,GAAqB,MAArB,GAA8B,OAAhC,CAAR;AACD,GAFD,CAL6C,CAS7C;;;AACA,QAAMG,gBAAgB,GAAG,MAAM;AAC7BJ,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD,GAFD;;AAIA,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAEI,WAAtB;AAAmC,MAAA,YAAY,EAAEF,KAAK,KAAK;AAA3D;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAEG,gBAAtB;AAAwC,MAAA,YAAY,EAAE;AAAtD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GArBQN,M;;KAAAA,M;AAuBT,eAAeA,MAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport ThemeContext from '../../utils/ThemeContext';\nimport Toggle from '../Toggle/Toggle';\nimport { Nav } from './styles';\n\nfunction NavBar({ sameScreen, setSameScreen }) {\n\n  const { theme, setTheme } = useContext(ThemeContext);\n\n  // for switching light/dark theme\n  const switchTheme = () => { \n    setTheme( (theme == 'light') ? 'dark' : 'light');\n  }\n\n  // for switching screens together/separate mode\n  const switchScreenMode = () => { \n    setSameScreen(!sameScreen);\n  }\n\n  return (\n    <Nav className=\"navbar\">\n      <p className=\"title\">Battle of da Browsers ðŸ”¥</p>\n      <Toggle toggleAction={switchTheme} initialState={theme === 'dark'} />\n      <Toggle toggleAction={switchScreenMode} initialState={false} />\n    </Nav>\n  );\n}\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}