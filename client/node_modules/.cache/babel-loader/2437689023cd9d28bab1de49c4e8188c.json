{"ast":null,"code":"var _jsxFileName = \"/Users/haleyglavina/Desktop/code/checkers2/src/components/Board/Board.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Board.css';\nimport Tile from '../Tile/Tile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(props) {\n  _s();\n\n  const [boardSize, setboardSize] = useState(7);\n  const [tiles, setTiles] = useState([]);\n\n  for (i = 0; i++; i < boardSize) {\n    for (j = 0; j++; j < boardSize) {\n      coordinates.push([i, j]);\n    }\n  }\n\n  getColor = coord => {\n    if ((i % 2 == 0 && j % 2 == 0) | (i % 2 == 1 && j % 2 == 1)) return 0;\n    return 1;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"board\",\n    children: tiles.forEach(coord => {\n      return /*#__PURE__*/_jsxDEV(Tile, {\n        x: coord[0],\n        y: coord[1],\n        color: getColor(coord)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"YNqwe5FOK96YSMAnhzWZym4EvgY=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/haleyglavina/Desktop/code/checkers2/src/components/Board/Board.js"],"names":["React","Tile","Board","props","boardSize","setboardSize","useState","tiles","setTiles","i","j","coordinates","push","getColor","coord","forEach"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAEpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBF,QAAQ,CAAC,EAAD,CAAlC;;AAEA,OAAKG,CAAC,GAAG,CAAT,EAAYA,CAAC,EAAb,EAAiBA,CAAC,GAAGL,SAArB,EAAgC;AAC9B,SAAKM,CAAC,GAAG,CAAT,EAAYA,CAAC,EAAb,EAAiBA,CAAC,GAAGN,SAArB,EAAgC;AAC9BO,MAAAA,WAAW,CAACC,IAAZ,CAAiB,CAACH,CAAD,EAAIC,CAAJ,CAAjB;AACD;AACF;;AAEDG,EAAAA,QAAQ,GAAIC,KAAD,IAAW;AACpB,QAAI,CAAEL,CAAC,GAAG,CAAJ,IAAS,CAAV,IAAiBC,CAAC,GAAG,CAAJ,IAAS,CAA3B,KAAmCD,CAAC,GAAG,CAAJ,IAAS,CAAV,IAAiBC,CAAC,GAAG,CAAJ,IAAS,CAA5D,CAAJ,EACE,OAAO,CAAP;AACF,WAAO,CAAP;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,KAAK,EAAC,OAAX;AAAA,cACGH,KAAK,CAACQ,OAAN,CAAcD,KAAK,IAAI;AACtB,0BAAO,QAAC,IAAD;AAAM,QAAA,CAAC,EAAEA,KAAK,CAAC,CAAD,CAAd;AAAmB,QAAA,CAAC,EAAEA,KAAK,CAAC,CAAD,CAA3B;AAAgC,QAAA,KAAK,EAAED,QAAQ,CAACC,KAAD;AAA/C;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAxBQZ,K;;KAAAA,K;AA0BT,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport './Board.css';\nimport Tile from '../Tile/Tile';\n\nfunction Board(props) {\n\n  const [boardSize, setboardSize] = useState(7);\n  const [tiles, setTiles] = useState([]);\n\n  for (i = 0; i++; i < boardSize) {\n    for (j = 0; j++; j < boardSize) {\n      coordinates.push([i, j]);\n    }\n  }\n\n  getColor = (coord) => {\n    if (((i % 2 == 0) && (j % 2 == 0)) | ((i % 2 == 1) && (j % 2 == 1)))\n      return 0;\n    return 1;\n  }\n\n  return (\n    <div class=\"board\">\n      {tiles.forEach(coord => {\n        return <Tile x={coord[0]} y={coord[1]} color={getColor(coord)}/> \n      })}\n    </div>\n  );\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}