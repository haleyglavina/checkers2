{"ast":null,"code":"var _jsxFileName = \"/Users/haleyglavina/Desktop/code/checkers2/src/components/NavBar/NavBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport ThemeContext from '../../utils/ThemeContext';\nimport Toggle from '../Toggle/Toggle';\nimport { Nav } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NavBar({\n  sameScreen,\n  setSameScreen\n}) {\n  _s();\n\n  const {\n    theme,\n    setTheme\n  } = useContext(ThemeContext);\n  const [toggleOn, setToggleOn] = useState(theme === 'dark'); // for switching light/dark theme\n\n  const switchTheme = () => {\n    // setToggleOn(!toggleOn);\n    setTheme(theme == 'light' ? 'dark' : 'light');\n  }; // for switching screens together/separate mode\n\n\n  const switchToggle = () => {\n    setToggleOn();\n    setSameScreen(!sameScreen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Nav, {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"title\",\n      children: \"Battle of da Browsers \\uD83D\\uDD25\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n      toggleAction: switchTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `toggle ${toggleOn ? 'toggle--on' : ''}`,\n      onClick: switchToggle,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"toggle__symbol toggle__symbol--dark\",\n        children: \"\\uD83C\\uDF1C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"toggle__symbol toggle__symbol--light\",\n        children: \"\\uD83C\\uDF1E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `toggle__dial ${toggleOn ? 'toggle__dial--on' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `toggle ${toggleOn ? 'toggle--on' : ''}`,\n      onClick: switchToggle,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"toggle__symbol toggle__symbol--dark\",\n        children: \"\\uD83C\\uDF1C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"toggle__symbol toggle__symbol--light\",\n        children: \"\\uD83C\\uDF1E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `toggle__dial ${toggleOn ? 'toggle__dial--on' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NavBar, \"CnwKLhtgbcd8QpLPsynnGYG9hzg=\");\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/haleyglavina/Desktop/code/checkers2/src/components/NavBar/NavBar.js"],"names":["React","useContext","useState","ThemeContext","Toggle","Nav","NavBar","sameScreen","setSameScreen","theme","setTheme","toggleOn","setToggleOn","switchTheme","switchToggle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,GAAT,QAAoB,UAApB;;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAhB,EAA+C;AAAA;;AAE7C,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBT,UAAU,CAACE,YAAD,CAAtC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAACO,KAAK,KAAK,MAAX,CAAxC,CAH6C,CAK7C;;AACA,QAAMI,WAAW,GAAG,MAAM;AACxB;AACAH,IAAAA,QAAQ,CAAGD,KAAK,IAAI,OAAV,GAAqB,MAArB,GAA8B,OAAhC,CAAR;AACD,GAHD,CAN6C,CAW7C;;;AACA,QAAMK,YAAY,GAAG,MAAM;AACzBF,IAAAA,WAAW;AACXJ,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD,GAHD;;AAKA,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAEM;AAAtB;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE;AAAK,MAAA,SAAS,EAAG,UAASF,QAAQ,GAAG,YAAH,GAAkB,EAAG,EAAvD;AAA0D,MAAA,OAAO,EAAEG,YAAnE;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,qCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,sCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAG,gBAAeH,QAAQ,GAAG,kBAAH,GAAwB,EAAG;AAAnE;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAWE;AAAK,MAAA,SAAS,EAAG,UAASA,QAAQ,GAAG,YAAH,GAAkB,EAAG,EAAvD;AAA0D,MAAA,OAAO,EAAEG,YAAnE;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,qCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,sCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAG,gBAAeH,QAAQ,GAAG,kBAAH,GAAwB,EAAG;AAAnE;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GApCQL,M;;KAAAA,M;AAsCT,eAAeA,MAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport ThemeContext from '../../utils/ThemeContext';\nimport Toggle from '../Toggle/Toggle';\nimport { Nav } from './styles';\n\nfunction NavBar({ sameScreen, setSameScreen }) {\n\n  const { theme, setTheme } = useContext(ThemeContext);\n  const [toggleOn, setToggleOn] = useState(theme === 'dark');\n\n  // for switching light/dark theme\n  const switchTheme = () => { \n    // setToggleOn(!toggleOn);\n    setTheme( (theme == 'light') ? 'dark' : 'light');\n  }\n\n  // for switching screens together/separate mode\n  const switchToggle = () => { \n    setToggleOn()\n    setSameScreen(!sameScreen);\n  }\n\n  return (\n    <Nav className=\"navbar\">\n      <p className=\"title\">Battle of da Browsers 🔥</p>\n\n      <Toggle toggleAction={switchTheme} />\n\n      <div className={`toggle ${toggleOn ? 'toggle--on' : ''}`} onClick={switchToggle}>\n        <p className=\"toggle__symbol toggle__symbol--dark\">🌜</p>\n        <p className=\"toggle__symbol toggle__symbol--light\">🌞</p>\n        <div className={`toggle__dial ${toggleOn ? 'toggle__dial--on' : ''}`}></div>\n      </div>\n\n      <div className={`toggle ${toggleOn ? 'toggle--on' : ''}`} onClick={switchToggle}>\n        <p className=\"toggle__symbol toggle__symbol--dark\">🌜</p>\n        <p className=\"toggle__symbol toggle__symbol--light\">🌞</p>\n        <div className={`toggle__dial ${toggleOn ? 'toggle__dial--on' : ''}`}></div>\n      </div>\n    </Nav>\n  );\n}\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}