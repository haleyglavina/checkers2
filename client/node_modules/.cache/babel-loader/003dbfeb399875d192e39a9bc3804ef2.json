{"ast":null,"code":"var _jsxFileName = \"/Users/haleyglavina/Desktop/code/checkers2/src/components/Tile/Tile.js\";\nimport React, { useEffect, useState } from 'react';\nimport './Tile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tile({\n  color,\n  coord,\n  isFocusTile,\n  setFocusTile\n}) {\n  // const [isFocused, setIsFocused] = useState(isFocusTile(coord));\n  const toggleFocus = () => {\n    console.log(\"tile clicked:\", coord[0], coord[1]);\n    console.log(\"is this a focus tile?\", isFocusTile(coord));\n    let i,\n        j = coord;\n\n    if ((i % 2 == 0 && j % 2 == 0) | (i % 2 == 1 && j % 2 == 1)) {\n      setFocusTile(null);\n      return;\n    }\n\n    isFocusTile(coord) ? setFocusTile(null) : setFocusTile(coord);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `tile \n                    ${color ? 'tile--light' : 'tile--dark'} \n                    ${isFocusTile(coord) ? 'tile--focus' : ''}`,\n    onClick: toggleFocus\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Tile;\nexport default Tile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"sources":["/Users/haleyglavina/Desktop/code/checkers2/src/components/Tile/Tile.js"],"names":["React","useEffect","useState","Tile","color","coord","isFocusTile","setFocusTile","toggleFocus","console","log","i","j"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,YAAP;;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA,KAAD;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,WAAf;AAA4BC,EAAAA;AAA5B,CAAd,EAAyD;AAEvD;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BL,KAAK,CAAC,CAAD,CAAlC,EAAuCA,KAAK,CAAC,CAAD,CAA5C;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCJ,WAAW,CAACD,KAAD,CAAhD;AAEA,QAAIM,CAAJ;AAAA,QAAOC,CAAC,GAAGP,KAAX;;AAEA,QAAI,CAAEM,CAAC,GAAG,CAAJ,IAAS,CAAV,IAAiBC,CAAC,GAAG,CAAJ,IAAS,CAA3B,KAAmCD,CAAC,GAAG,CAAJ,IAAS,CAAV,IAAiBC,CAAC,GAAG,CAAJ,IAAS,CAA5D,CAAJ,EAAqE;AACnEL,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;AACD;;AAEDD,IAAAA,WAAW,CAACD,KAAD,CAAX,GAAqBE,YAAY,CAAC,IAAD,CAAjC,GAA0CA,YAAY,CAACF,KAAD,CAAtD;AACD,GAZD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAG;AACrB,sBAAsBD,KAAK,GAAG,aAAH,GAAmB,YAAa;AAC3D,sBAAsBE,WAAW,CAACD,KAAD,CAAX,GAAqB,aAArB,GAAqC,EAAG,EAF1D;AAGI,IAAA,OAAO,EAAEG;AAHb;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KA3BQL,I;AA6BT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Tile.css';\n\nfunction Tile({color, coord, isFocusTile, setFocusTile}) {\n\n  // const [isFocused, setIsFocused] = useState(isFocusTile(coord));\n\n  const toggleFocus = () => {\n    console.log(\"tile clicked:\", coord[0], coord[1]);\n    console.log(\"is this a focus tile?\", isFocusTile(coord));\n\n    let i, j = coord\n    \n    if (((i % 2 == 0) && (j % 2 == 0)) | ((i % 2 == 1) && (j % 2 == 1))) {\n      setFocusTile(null);\n      return;\n    }\n\n    isFocusTile(coord) ? setFocusTile(null) : setFocusTile(coord);\n  }\n\n\n  return (\n    <div className={`tile \n                    ${color ? 'tile--light' : 'tile--dark'} \n                    ${isFocusTile(coord) ? 'tile--focus' : ''}`}\n        onClick={toggleFocus}>\n      \n    </div>\n  );\n}\n\nexport default Tile;"]},"metadata":{},"sourceType":"module"}