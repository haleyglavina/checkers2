{"ast":null,"code":"var _jsxFileName = \"/Users/haleyglavina/Desktop/code/checkers2/src/components/Board/Board.js\";\nimport React, { useEffect, useState } from 'react';\nimport './Board.css';\nimport Tile from '../Tile/Tile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet boardSize = 7;\nlet coords = [];\n\nfor (let i = 0; i < boardSize; i++) {\n  for (let j = 0; j < boardSize; j++) {\n    coords.push([i, j]);\n  }\n} // function Board(props) {\n//   // const [boardSize, setboardSize] = useState(7);\n//   // const [tiles, setTiles] = useState([]);\n//   // const [coord, setCoord] = useState([]);\n//   // // Create tile coordinates on page load\n//   // useEffect(() => {\n//   //   let coordinates = [];\n//   //   for (let i = 0; i < boardSize; i++) {\n//   //     for (let j = 0; j < boardSize; j++) {\n//   //       coordinates.push([i, j]);\n//   //     }\n//   //   }\n//   //   setCoord(coordinates)\n//   // })\n//   // Determines what color a tile will be\n//   const getColor = (coord) => {\n//     let i = coord[0]\n//     let j = coord[1]\n//     if (((i % 2 == 0) && (j % 2 == 0)) | ((i % 2 == 1) && (j % 2 == 1)))\n//       return 0;\n//     return 1;\n//   }\n//   return (\n//     <div class=\"board\">\n//       {tiles.map(coord => {\n//         return <Tile x={coord[0]} y={coord[1]} color={getColor(coord)}/> \n//       })}\n//     </div>\n//   );\n// }\n\n\nclass Board extends Component {\n  // state = {\n  //   boardSize: 7\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/haleyglavina/Desktop/code/checkers2/src/components/Board/Board.js"],"names":["React","useEffect","useState","Tile","boardSize","coords","i","j","push","Board","Component","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,IAAIC,SAAS,GAAG,CAAhB;AACA,IAAIC,MAAM,GAAG,EAAb;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAApB,EAA+BE,CAAC,EAAhC,EAAoC;AAClC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAApB,EAA+BG,CAAC,EAAhC,EAAoC;AAClCF,IAAAA,MAAM,CAACG,IAAP,CAAY,CAACF,CAAD,EAAIC,CAAJ,CAAZ;AACD;AACF,C,CAED;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAME,KAAN,SAAoBC,SAApB,CAA8B;AAC5B;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAX2B;;AAe9B,eAAeF,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Board.css';\nimport Tile from '../Tile/Tile';\n\nlet boardSize = 7;\nlet coords = []\nfor (let i = 0; i < boardSize; i++) {\n  for (let j = 0; j < boardSize; j++) {\n    coords.push([i, j]);\n  }\n}\n\n// function Board(props) {\n\n//   // const [boardSize, setboardSize] = useState(7);\n//   // const [tiles, setTiles] = useState([]);\n//   // const [coord, setCoord] = useState([]);\n\n//   // // Create tile coordinates on page load\n//   // useEffect(() => {\n//   //   let coordinates = [];\n//   //   for (let i = 0; i < boardSize; i++) {\n//   //     for (let j = 0; j < boardSize; j++) {\n//   //       coordinates.push([i, j]);\n//   //     }\n//   //   }\n\n//   //   setCoord(coordinates)\n//   // })\n\n//   // Determines what color a tile will be\n//   const getColor = (coord) => {\n//     let i = coord[0]\n//     let j = coord[1]\n\n//     if (((i % 2 == 0) && (j % 2 == 0)) | ((i % 2 == 1) && (j % 2 == 1)))\n//       return 0;\n//     return 1;\n//   }\n\n//   return (\n//     <div class=\"board\">\n//       {tiles.map(coord => {\n//         return <Tile x={coord[0]} y={coord[1]} color={getColor(coord)}/> \n//       })}\n//     </div>\n//   );\n// }\n\nclass Board extends Component {\n  // state = {\n  //   boardSize: 7\n  // }\n\n  render() {\n    return (\n      <div>\n        \n      </div>\n    );\n  }\n}\n\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}