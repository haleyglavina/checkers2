{"ast":null,"code":"var _jsxFileName = \"/Users/haleyglavina/Desktop/code/checkers2/src/components/Tile/Tile.js\";\nimport React, { useEffect, useState } from 'react';\nimport './Tile.scss';\nimport ieLogo from '../../assets/ieLogo.png';\nimport chromeLogo from '../../assets/chromeLogo.png';\nimport crown from \"../../assets/crown.svg\";\nimport { TileContainer, CheckerPiece } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tile({\n  color,\n  coord,\n  isFocusTile,\n  hasChecker,\n  tileClicked,\n  isKing,\n  boardSize\n}) {\n  const toggleFocus = () => {\n    tileClicked(coord);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TileContainer, {\n    color: color,\n    isFocusTile: isFocusTile(coord),\n    onClick: toggleFocus,\n    boardSize: boardSize,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"label\",\n      children: `${coord[0]}, ${coord[1]}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), hasChecker & isKing ? /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"crown\",\n      src: crown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 32\n    }, this) : '', hasChecker ? /*#__PURE__*/_jsxDEV(CheckerPiece, {\n      src: hasChecker == 1 ? chromeLogo : ieLogo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Tile;\nexport default Tile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"sources":["/Users/haleyglavina/Desktop/code/checkers2/src/components/Tile/Tile.js"],"names":["React","useEffect","useState","ieLogo","chromeLogo","TileContainer","CheckerPiece","Tile","color","coord","isFocusTile","hasChecker","tileClicked","isKing","boardSize","toggleFocus","crown"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAEA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,UAA5C;;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA,KAAD;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,WAAf;AAA4BC,EAAAA,UAA5B;AAAwCC,EAAAA,WAAxC;AAAqDC,EAAAA,MAArD;AAA6DC,EAAAA;AAA7D,CAAd,EAAuF;AAErF,QAAMC,WAAW,GAAG,MAAM;AACxBH,IAAAA,WAAW,CAACH,KAAD,CAAX;AACD,GAFD;;AAIA,sBACE,QAAC,aAAD;AACI,IAAA,KAAK,EAAED,KADX;AAEI,IAAA,WAAW,EAAEE,WAAW,CAACD,KAAD,CAF5B;AAGI,IAAA,OAAO,EAAEM,WAHb;AAII,IAAA,SAAS,EAAID,SAJjB;AAAA,4BAME;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA,gBAAuB,GAAEL,KAAK,CAAC,CAAD,CAAI,KAAIA,KAAK,CAAC,CAAD,CAAI;AAA/C;AAAA;AAAA;AAAA;AAAA,YANF,EAOIE,UAAU,GAAGE,MAAd,gBAAwB;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,GAAG,EAAEG;AAA5B;AAAA;AAAA;AAAA;AAAA,YAAxB,GAAgE,EAPnE,EAQGL,UAAU,gBAAG,QAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,UAAU,IAAI,CAAd,GAAkBP,UAAlB,GAA+BD;AAAlD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAkE,EAR/E;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;KAlBQI,I;AAoBT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Tile.scss';\nimport ieLogo from '../../assets/ieLogo.png';\nimport chromeLogo from '../../assets/chromeLogo.png';\nimport crown from '../../assets/crown.svg';\nimport { TileContainer, CheckerPiece } from './styles';\n\nfunction Tile({color, coord, isFocusTile, hasChecker, tileClicked, isKing, boardSize}) {\n\n  const toggleFocus = () => {\n    tileClicked(coord);\n  }\n\n  return (\n    <TileContainer \n        color={color} \n        isFocusTile={isFocusTile(coord)}\n        onClick={toggleFocus}\n        boardSize = {boardSize}\n    >\n      <p className=\"label\">{`${coord[0]}, ${coord[1]}`}</p> \n      {(hasChecker & isKing) ? <img className=\"crown\" src={crown} /> : ''}\n      {hasChecker ? <CheckerPiece src={hasChecker == 1 ? chromeLogo : ieLogo} /> : ''}\n    </TileContainer>\n  );\n}\n\nexport default Tile;"]},"metadata":{},"sourceType":"module"}