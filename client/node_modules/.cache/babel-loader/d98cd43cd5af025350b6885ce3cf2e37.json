{"ast":null,"code":"var _jsxFileName = \"/Users/haleyglavina/Desktop/code/checkers2/src/components/Tile/Tile.js\";\nimport React, { useEffect, useState } from 'react';\nimport './Tile.scss';\nimport ieLogo from '../../assets/ieLogo.png';\nimport chromeLogo from '../../assets/chromeLogo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tile({\n  color,\n  coord,\n  isFocusTile,\n  setFocusTile,\n  hasChecker\n}) {\n  // const [hasChecker, setHasChecker] = useState(hasChecker);\n  const toggleFocus = () => {\n    console.log(\"tile clicked:\", coord[0], coord[1]);\n    console.log(\"is this a focus tile?\", isFocusTile(coord));\n\n    if (color) {\n      setFocusTile(null);\n      return;\n    }\n\n    isFocusTile(coord) ? setFocusTile(null) : setFocusTile(coord);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `tile \n                    ${color ? 'tile--light' : 'tile--dark'} \n                    ${isFocusTile(coord) ? 'tile--focus' : ''}`,\n    onClick: toggleFocus,\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: hasChecker ? hasChecker : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Tile;\nexport default Tile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"sources":["/Users/haleyglavina/Desktop/code/checkers2/src/components/Tile/Tile.js"],"names":["React","useEffect","useState","ieLogo","chromeLogo","Tile","color","coord","isFocusTile","setFocusTile","hasChecker","toggleFocus","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA,KAAD;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,WAAf;AAA4BC,EAAAA,YAA5B;AAA0CC,EAAAA;AAA1C,CAAd,EAAqE;AAEnE;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BN,KAAK,CAAC,CAAD,CAAlC,EAAuCA,KAAK,CAAC,CAAD,CAA5C;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCL,WAAW,CAACD,KAAD,CAAhD;;AAEA,QAAID,KAAJ,EAAW;AACTG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;AACD;;AAEDD,IAAAA,WAAW,CAACD,KAAD,CAAX,GAAqBE,YAAY,CAAC,IAAD,CAAjC,GAA0CA,YAAY,CAACF,KAAD,CAAtD;AACD,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAG;AACrB,sBAAsBD,KAAK,GAAG,aAAH,GAAmB,YAAa;AAC3D,sBAAsBE,WAAW,CAACD,KAAD,CAAX,GAAqB,aAArB,GAAqC,EAAG,EAF1D;AAGI,IAAA,OAAO,EAAEI,WAHb;AAAA,2BAIE;AAAA,gBAAID,UAAU,GAAGA,UAAH,GAAgB;AAA9B;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KAxBQL,I;AA0BT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Tile.scss';\nimport ieLogo from '../../assets/ieLogo.png';\nimport chromeLogo from '../../assets/chromeLogo.png';\n\nfunction Tile({color, coord, isFocusTile, setFocusTile, hasChecker}) {\n\n  // const [hasChecker, setHasChecker] = useState(hasChecker);\n\n  const toggleFocus = () => {\n    console.log(\"tile clicked:\", coord[0], coord[1]);\n    console.log(\"is this a focus tile?\", isFocusTile(coord));\n\n    if (color) {\n      setFocusTile(null);\n      return;\n    }\n\n    isFocusTile(coord) ? setFocusTile(null) : setFocusTile(coord);\n  }\n\n  return (\n    <div className={`tile \n                    ${color ? 'tile--light' : 'tile--dark'} \n                    ${isFocusTile(coord) ? 'tile--focus' : ''}`}\n        onClick={toggleFocus}>\n      <p>{hasChecker ? hasChecker : ''}</p>\n    </div>\n  );\n}\n\nexport default Tile;"]},"metadata":{},"sourceType":"module"}